// Text overflow
// Requires inline-block or block for proper styling

@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}


// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix {
  &:before,
  &:after {
    content: " ";
    // 1
    display: table;
    // 2

  }
  &:after {
    clear: both;
  }
}

// WebKit-style focus

@mixin tab-focus {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Typography

// Contextual backgrounds

// [converter] $parent hack
@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color;
  }
  a#{$parent}:hover {
    background-color: darken($color, 10%);
  }
}

// [converter] $parent hack
@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color;
  }
  a#{$parent}:hover {
    color: darken($color, 10%);
  }
}

// Image Mixins
// - Responsive image
// - Retina image

// Responsive image
//
// Keep images from scaling beyond the width of their parents.
@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%;
  // Part 1: Set a maximum relative to the parent
  height: auto;
  // Part 2: Scale the height according to the width, otherwise you get stretching
}

// Retina image
//
// Short retina mixin for setting background-image and -size. Note that the
// spelling of `min--moz-device-pixel-ratio` is intentional.
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path(#{$file-1x}), #{$file-1x}));
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
    background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path(#{$file-2x}), #{$file-2x}));
    background-size: $width-1x $height-1x;
  }
}

@mixin headings {
  h1, h2, h3, h4, h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
    @content;
  }
}

@mixin resize-headings($h1, $h2, $h3, $h4, $h5, $h6) {
  h1, .h1 {
    font-size: $h1 !important;
  }
  h2, .h2 {
    font-size: $h2;
  }
  h3, .h3 {
    font-size: $h3 !important;
  }
  h4, .h4 {
    font-size: $h4 !important;
  }
  h5, .h5 {
    font-size: $h5 !important;
  }
  h6, .h6 {
    font-size: $h6 !important;
  }
}

// center vertically and/or horizontally an absolute positioned element
//credit: http://codyhouse.co/gem/css-animated-headlines/

@mixin center($xy: xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    transform: translateX(-50%) translateY(-50%);
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
  }
}

@mixin text-fill-color($color) {
  @include prefixer(text-fill-color, $color, webkit moz spec);
}

@mixin buttons($color) {
  display: inline-block;
  position: relative;
  padding: 5px 15px;
  margin: 10px;
  font-weight: 500;
  text-align: center;
  line-height: 30px;
  color: #FFF;
  border-radius: 5px;
  transition: all 0.2s;
  background: $color;
  &:hover {
    background: darken($color, 10%);
  }
}


@mixin browser-content($link) {
  $large-screen: em(860) !default;
  background: url($link);
  background-color: white;
  background-position: top;
  background-repeat: no-repeat;
  background-size: cover !important;
  border-left: 0;
  border-right: 0;
  height: 17em;
  overflow: hidden;
}

@mixin project-theme($color) {
  .repo, .live {
    @include buttons($color);
  }
  .tech-list li span {
    color: $color;
  }
}

@mixin timeline-color($color) {
  #timeline {
    &::before,
    .timeline-icon,
    .timeline-header {
      background: $color;
    }
    .timeline-content {
      border: 2px solid $color;
      &::before {
        border-left-color: $color !important;
        @include breakpoint($timeline) {
          border-right-color: $color !important;
        }
      }
      &.right::before {
        border-right-color: $color !important;
      }
    }
  }
}


@mixin underline-text-shadow($background-color) {
    text-shadow: 0.03em 0 $background-color, -0.03em 0 $background-color, 0 0.03em $background-color, 0 -0.03em $background-color, 0.06em 0 $background-color, -0.06em 0 $background-color, 0.09em 0 $background-color, -0.09em 0 $background-color, 0.12em 0 $background-color, -0.12em 0 $background-color, 0.15em 0 $background-color, -0.15em 0 $background-color;
}
@mixin underline-background-image($background-color, $color) {
  background-image: linear-gradient($background-color, $background-color), linear-gradient($background-color, $background-color), linear-gradient($color, $color);
}

@mixin underline($background-color, $color, $selection-color) {
  color: $color;
  text-decoration: none;
  font-style: normal !important;
  @include underline-text-shadow($background-color);
  @include underline-background-image($background-color, $color);
  background-size: 0.05em 1px, 0.05em 1px, 1px 1px;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0 90%, 100% 90%, 0 93%;
  &::before, &::after,
  *, *::before, *::after {
    text-shadow: none;
  }
  &:visited {
    color: $color;
  }
  svg {
    @include underline-background-image($background-color, $background-color);
  }

  &::selection {
    @include underline-text-shadow($selection-color);
    @include underline-background-image($background-color, $selection-color);
    background: $selection-color;
    text-decoration: none;
  }
}
